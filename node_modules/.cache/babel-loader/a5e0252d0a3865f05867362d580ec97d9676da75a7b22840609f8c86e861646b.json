{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harun.kirtay\\\\Desktop\\\\WebSocketV2.1\\\\src\\\\components\\\\WebSocketComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DataDisplay from './DataDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketComponent = () => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [ipAddress, setIpAddress] = useState('');\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:5003/ws');\n    setSocket(ws);\n    ws.onopen = () => {\n      console.log(\"WebSocket bağlantısı kuruldu\");\n    };\n    ws.onmessage = event => {\n      setData(prevData => [...prevData, event.data]);\n    };\n    ws.onclose = () => {\n      console.log(\"WebSocket bağlantısı kapandı\");\n    };\n    return () => ws.close();\n  }, []);\n  const startCommunication = () => {\n    if (socket && ipAddress) {\n      const command = {\n        action: 'startCommunication',\n        parameters: {\n          ipAddress: ipAddress\n        }\n      };\n      socket.send(JSON.stringify(command));\n    }\n  };\n  const stopCommunication = () => {\n    if (socket) {\n      const command = {\n        action: 'stopCommunication'\n      };\n      socket.send(JSON.stringify(command));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"SNMP Communication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"IP Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: ipAddress,\n        onChange: e => setIpAddress(e.target.value),\n        placeholder: \"Enter IP address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCommunication,\n      children: \"Start Communication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopCommunication,\n      children: \"Stop Communication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataDisplay, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketComponent, \"uMF7XV6VTOkPS/NbMDaa788tg2o=\");\n_c = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketComponent\");","map":{"version":3,"names":["React","useState","useEffect","DataDisplay","jsxDEV","_jsxDEV","WebSocketComponent","_s","socket","setSocket","ipAddress","setIpAddress","data","setData","ws","WebSocket","onopen","console","log","onmessage","event","prevData","onclose","close","startCommunication","command","action","parameters","send","JSON","stringify","stopCommunication","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/harun.kirtay/Desktop/WebSocketV2.1/src/components/WebSocketComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DataDisplay from './DataDisplay';\r\n\r\nconst WebSocketComponent = () => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [ipAddress, setIpAddress] = useState('');\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const ws = new WebSocket('ws://localhost:5003/ws');\r\n    setSocket(ws);\r\n\r\n    ws.onopen = () => {\r\n      console.log(\"WebSocket bağlantısı kuruldu\");\r\n    };\r\n\r\n    ws.onmessage = (event) => {\r\n      setData((prevData) => [...prevData, event.data]);\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log(\"WebSocket bağlantısı kapandı\");\r\n    };\r\n\r\n    return () => ws.close();\r\n  }, []);\r\n\r\n  const startCommunication = () => {\r\n    if (socket && ipAddress) {\r\n      const command = {\r\n        action: 'startCommunication',\r\n        parameters: {\r\n          ipAddress: ipAddress,\r\n        },\r\n      };\r\n      socket.send(JSON.stringify(command));\r\n    }\r\n  };\r\n\r\n  const stopCommunication = () => {\r\n    if (socket) {\r\n      const command = { action: 'stopCommunication' };\r\n      socket.send(JSON.stringify(command));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>SNMP Communication</h2>\r\n      <div>\r\n        <label>IP Address:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={ipAddress}\r\n          onChange={(e) => setIpAddress(e.target.value)}\r\n          placeholder=\"Enter IP address\"\r\n        />\r\n      </div>\r\n      <button onClick={startCommunication}>Start Communication</button>\r\n      <button onClick={stopCommunication}>Stop Communication</button>\r\n      <DataDisplay data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebSocketComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}